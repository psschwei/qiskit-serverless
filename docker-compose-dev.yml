# compose config for running images based on local files
services:
  jupyter:
    container_name: qs-jupyter
    build:
      context: ./
      dockerfile: infrastructure/docker/Dockerfile-notebook
    profiles: ["jupyter", "full"]
    volumes:
      - ./docs/getting_started:/home/jovyan/
    ports:
      - 8889:8888
    shm_size: 10gb
    environment:
      - JUPYTER_TOKEN=123
    networks:
      - safe-tier
  ray-head:
    container_name: ray-head
    build:
      context: ./
      dockerfile: infrastructure/docker/Dockerfile-ray-qiskit
    entrypoint: [
      "ray", "start", "--head", "--port=6379",
      "--dashboard-host=0.0.0.0", "--block"
    ]
    environment:
      - OT_JAEGER_HOST_KEY=jaeger
    ports:
      - 8265:8265
    privileged: true
    volumes:
      - /dev/shm:/dev/shm
    networks:
      - safe-tier
  jaeger:
    image: jaegertracing/all-in-one:latest
    profiles: [ "full" ]
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
    ports:
      - 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686
      - 14268:14268
      - 14250:14250
      - 9411:9411
    networks:
      - safe-tier
  postgres:
    image: postgres
    environment:
      POSTGRES_DB: testkeycloakdb
      POSTGRES_USER: testkeycloakuser
      POSTGRES_PASSWORD: testkeycloakpassword
    networks:
      - safe-tier
    restart:
      always
  keycloak:
    container_name: keycloak
    image: bitnami/keycloak:20.0.5-debian-11-r4
    volumes:
      - ./realm-export.json:/opt/keycloak/data/import/realm-export.json
    environment:
      KEYCLOAK_DATABASE_HOST: postgres
      KEYCLOAK_DATABASE_NAME: testkeycloakdb
      KEYCLOAK_DATABASE_USER: testkeycloakuser
      KEYCLOAK_DATABASE_SCHEMA: public
      KEYCLOAK_DATABASE_PASSWORD: testkeycloakpassword
      KEYCLOAK_ADMIN_USER: admin
      KEYCLOAK_ADMIN_PASSWORD: 123
      KEYCLOAK_HTTP_PORT: 8080
      KEYCLOAK_EXTRA_ARGS: "-Dkeycloak.import=/opt/keycloak/data/import/realm-export.json"
    ports:
      - 8085:8080
    depends_on:
      - postgres
    networks:
      - safe-tier
    restart:
      always
  gateway:
    container_name: gateway
    build:
      context: ./
      dockerfile: infrastructure/docker/Dockerfile-gateway
    command: gunicorn main.wsgi:application --bind 0.0.0.0:8000 --workers=4
    ports:
      - 8000:8000
    environment:
      - DEBUG=1
      - RAY_HOST=http://ray-head:8265
      - CLIENT_ID=gateway-client
      - DJANGO_SUPERUSER_USERNAME=admin
      - DJANGO_SUPERUSER_PASSWORD=123
      - DJANGO_SUPERUSER_EMAIL=admin@noemail.com
      - SETTING_KEYCLOAK_URL=http://keycloak:8080
      - SETTING_KEYCLOAK_REALM=quantumserverless
      - SETTINGS_KEYCLOAK_CLIENT_SECRET=supersecret
      - SITE_HOST=http://gateway:8000
    networks:
      - safe-tier
    depends_on:
      - keycloak
  repository-server:
    container_name: repository-server
    build:
      context: ./
      dockerfile: infrastructure/docker/Dockerfile-repository-server
    command: gunicorn main.wsgi:application --bind 0.0.0.0:8060 --workers=4
    ports:
      - 8060:8060
    environment:
      - DEBUG=1
      - DJANGO_SUPERUSER_USERNAME=admin
      - DJANGO_SUPERUSER_PASSWORD=123
      - DJANGO_SUPERUSER_EMAIL=admin@noemail.com
    networks:
      - safe-tier
  prometheus:
    image: prom/prometheus:v2.43.0
    profiles: [ "full" ]
    ports:
      - 9000:9090
  loki:
    image: grafana/loki:2.7.5
    profiles: [ "full" ]
    ports:
      - 3100:3100
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - safe-tier
  promtail:
    image: grafana/promtail:2.7.4
    profiles: [ "full" ]
    volumes:
      - /var/log:/var/log
    command: -config.file=/etc/promtail/config.yml
    networks:
      - safe-tier
  grafana:
    image: grafana/grafana:latest
    profiles: [ "full" ]
    ports:
      - 3000:3000
    networks:
      - safe-tier
networks:
  safe-tier:
